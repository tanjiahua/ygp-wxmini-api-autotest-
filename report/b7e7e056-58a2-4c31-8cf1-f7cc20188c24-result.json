{"name": "直接购买产品，下单，微信支付", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "self = <test_case.test_order.Test_Order object at 0x000001BD04184E50>\n\n    @allure.story(\"直接购买产品，下单，微信支付\")\n    @allure.title(\"直接购买产品，下单，微信支付\")\n    @allure.severity(\"critical\")\n    def test_order_pay(self):\n        with allure.step(\"step1：在商品详情页，直接购买，点击确定按钮\"):\n            res = self.order_submit()\n            assert res['msg'] == '请求/操作成功'\n            orderNo=res[\"data\"][\"orderNo\"]\n            trxreserved = orderNo\n        with allure.step(\"step1：微信支付\"):\n            res = self.order_pay(orderNo)\n            assert res['msg'] == '请求/操作成功'\n            cusorderid=self.order_pay(trxreserved)[\"data\"][\"reqsn\"]\n            trxid=self.order_pay(trxreserved)[\"data\"][\"trxid\"]\n        with allure.step(\"step1：微信支付回调成功\"):\n            res = self.pay_call_back(cusorderid,trxid,trxreserved)\n>           assert res.status_code ==200\nE           assert 401 == 200\nE            +  where 401 = <Response [401]>.status_code\n\ntest_case\\test_order.py:31: AssertionError"}, "steps": [{"name": "step1：在商品详情页，直接购买，点击确定按钮", "status": "passed", "start": 1648449774491, "stop": 1648449775988}, {"name": "step1：微信支付", "status": "passed", "start": 1648449775988, "stop": 1648449778905}, {"name": "step1：微信支付回调成功", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code\n", "trace": "  File \"E:\\work\\ygp-wxmini-api-autotest\\test_case\\test_order.py\", line 31, in test_order_pay\n    assert res.status_code ==200\n"}, "start": 1648449778905, "stop": 1648449778958}], "start": 1648449774491, "stop": 1648449778959, "uuid": "43945282-fe20-47d4-adc9-bd89526e57e6", "historyId": "111768e5d1f4c76843eb9835a70648d8", "testCaseId": "be9c653a9032d9d969788134510387c6", "fullName": "test_case.test_order.Test_Order#test_order_pay", "labels": [{"name": "severity", "value": "critical"}, {"name": "epic", "value": "订单测试流程"}, {"name": "story", "value": "直接购买产品，下单，微信支付"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "Test_Order"}, {"name": "host", "value": "ygp-tanjiahua"}, {"name": "thread", "value": "19592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_order"}]}